---

- name: Check if customizations were gathered
  stat:
    path: "{{ custom_dir }}"
  register: customizations_dir

- name: Make sure customizations directory exists
  file:
    path: "{{ custom_dir}}"
    state: directory
  when: not customizations_dir.stat.exists

- name: Gather package customizations
  script: files/get_package_customizations.sh {{ item }}
  register: customizations_result
  environment:
    APT_CONF: "{{ apt_conf }}"
    CUSTOM_DIR: "{{ custom_dir }}"
  with_items: "{{ md5_verify_result.stdout_lines }}"
  when: not customizations_dir.stat.exists and
        md5_verify_result is defined and
        md5_verify_result.stdout != ""

- name: Download customizations to Fuel
  fetch:
    src:  "{{ custom_dir }}/{{ item }}/{{ item }}_customization.patch"
    dest: "{{ fuel_custom_dir }}/{{ ansible_hostname }}/"
    flat: true
  with_items: "{{ md5_verify_result.stdout_lines }}"
  when: customizations_result is defined and
        customizations_result.changed

- name: Verify customizations consistency
  register: verify_customizations_result
  run_once: true
  delegate_to: localhost
  ignore_errors: true
  script: files/verify_customizations_consistency.sh
  environment:
    FUEL_CUSTOM_DIR: "{{ fuel_custom_dir }}"
    FUEL_PATCHES_DIR: "{{ fuel_patches_dir }}"
  changed_when: verify_customizations_result.stdout != "" and
                verify_customizations_result.rc == 0

- name: Show results of customizations consistency Verification
  run_once: true
  debug:
    msg: "{{ verify_customizations_result.stdout_lines }}"
  when: verify_customizations_result is defined and
        verify_customizations_result.failed

#- name: Fail if verifying of customizations consistency failed
#  run_once: true
#  fail:
#    msg: "[ERROR] Verifying of customizations consistency FAILED"
#  when: verify_customizations_result is defined and
#        verify_customizations_result.failed
